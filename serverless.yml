service: awssls

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  stage: dev
  
plugins:
  - serverless-offline
  - serverless-iam-roles-per-function

  
# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  hello:
    handler: src/handler.hello
    events:
      - http:
          path: loan
          method: post
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:DescribeTable
          - dynamodb:Query
          - dynamodb:Scan    
        Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/LoanTable"
  dbstlam:
    handler: src/dblistner.dblistner
    events:
      - stream:
          type: dynamodb
          batchSize: 50
          startingPosition: LATEST
          arn:
            Fn::GetAtt: [ LoanTable, StreamArn ]
          filterPatterns:
            - eventName: [INSERT,MODIFY]
              dynamodb:
                NewImage:
                  status:
                    S: ['New']
        # arn: !GetAtt LoanTable.StreamArn
        # arn:
        #   Fn::GetAtt:
        #     - LoanTable
        #     - StreamArn
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:DescribeTable
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:ListStreams
          - dynamodb:UpdateItem
        Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/LoanTable"
      - Effect: "Allow"        
        Action:
          - dynamodb:GetRecords
          - dynamodb:GetShardIterator
          - dynamodb:DescribeStream
          - dynamodb:ListShards
          - dynamodb:ListStreams
        Resource:
          Fn::GetAtt: [ LoanTable, StreamArn ]

#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
resources:
  Resources:
    LoanTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: 'LoanTable'
        AttributeDefinitions:
          - AttributeName: loanId
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          # - AttributeName: body
          #   AttributeType: M
        KeySchema:
          - AttributeName: loanId
            KeyType: HASH
          - AttributeName: status
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_IMAGE
